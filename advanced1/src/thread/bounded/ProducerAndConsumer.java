package thread.bounded;

public class ProducerAndConsumer {
    /*
    생산자 소비자 문제
        생산자 소비자 문제는 멀티스레드 프로그래밍에서 자주 등장하는 동시성 문제 중 하나로 여러 스레드가 동시에 데이터를 생산하고 소비하는 상황을 다룬다.

        생산자(Producer)
            데이터를 생성하는 역할을 한다.
            예를 들어 파일에서 데이터를 읽어오거나 네트워크에서 데이터를 받아오는 스레드가 생산자 역할을 할 수 있다.
            앞서 프린터 예제에서 사용자의 입력을 프린터 큐에 전달하는 스레드가 생산자의 역할이다.

        소비자(Consumer)
            생성된 데이터를 사용하는 역할을 한다.
            예를 들어 데이터를 처리하거나 저장하는 스레드가 소비자 역할을 할 수 있다.
            앞서 프린터 예제에서 프린터 큐에 전달된 데이터를 받아서 출력하는 스레드가 소비자 역할이다.

        버퍼(Buffer)
            생산자가 생성한 데이터를 일시적으로 저장하는 공간이다.
            이 버퍼는 한정된 크기를 가지며 생산자와 소비자가 이 버퍼를 통해 데이터를 주고받는다.
            앞서 프린터 예제에서 프린터 큐가 버퍼 역할이다.

        문제 상황
            - 생산자가 너무 빠를 때
                버퍼가 가득 차서 더 이상 데이터를 넣을 수 없을 때까지 생산자가 데이터를 생성한다.
                버퍼가 가득 찬 경우 생산자는 버퍼에 빈 공간이 생길 때까지 기다려야 한다.
            - 소비자가 너무 빠를 때
                버퍼가 비어서 더 이상 소비할 데이터가 없을 때까지 소비자가 데이터를 처리한다.
                버퍼가 비어있을 때 소비자는 버퍼에 새로운 데이터가 들어올 때까지 기다려야 한다.

        이 문제는 다음 두 용어로 불린다. 둘 다 같은 뜻이다.
            생산자 소비자 문제(producer-consumer problem): 생산자 소비자 문제는 생산자 스레드와 소비자 스레드가 특정 자원을 함께 생산하고 소비하면서 발생하는 문제이다.
            한정된 버퍼 문제(bounded-buffer problem): 이 문제는 결국 중간에 있는 버퍼의 크기가 한정되어 있기 때문에 발생한다. 따라서 한정된 버퍼 문제라고도 한다.
    */
}
